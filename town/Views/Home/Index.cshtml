@{
    ViewBag.Title = "Index";
}
<style>
    .map {
        display: inline-block;  /* crops edges */
        font-size: 0px;         /* removes extra margins between tiles due to whitespace */
        overflow: hidden;       /* removes extra margins between tiles due to whitespace */
        border: 3px solid grey;
    }
    /* tile layers */
    .tile {
        display: inline-block;
        position: relative;
        width: 30px;
        height: 30px;
        text-align: center;
        line-height: 30px;
        /*border: 1px solid grey;*/
        left: 0px;
    }
    .tile-bg {
        position: absolute;
        width: 40px;
        height: 40px;
        background-repeat: no-repeat;
        left: -5px;
        top: -5px;
        text-align: center;
        line-height: 40px;
    }
    .tile-L1 {
        position: absolute;
        width: 20px;
        height: 20px;
        background-repeat: no-repeat;
        left: 0px;
        top: 0px;
        text-align: center;
        line-height: 10px;
    }

    /* terrain types of tile-bg */
    .terrain-water {
        z-index: 0;
        background-color: #08226b;
        /*background-image: url("images/terrain/water_0.png");*/
    }
    .terrain-dirt {
        z-index: 3;
        background-image: url("images/terrain/dirt_0.png");
    }
    .terrain-dirt-1 {
        background-image: url("images/terrain/dirt_1.png");
    }
    .terrain-dirt-2 {
        background-image: url("images/terrain/dirt_2.png");
    }
    .terrain-grass {
        z-index: 4;
        background-image: url("images/terrain/grass_0.png");
    }
    .terrain-grass-1 {
        background-image: url("images/terrain/grass_1.png");
    }
    .terrain-grass-2 {
        background-image: url("images/terrain/grass_2.png");
    }
    .terrain-grass-3 {
        background-image: url("images/terrain/grass_3.png");
    }

    /* trees for terrain L1 */
    .terrain-tree {
        z-index: 10;
        position: absolute;
        background-color: #008800;
        background-image: url("images/terrain/treetop_0.png");
        background-position:center; 
        background-repeat: no-repeat;
        /*border: 1px solid #005500;*/
        border-radius: 5px;
    }
    .terrain-tree-1 {
        background-image: url("images/terrain/treetop_1.png");
    }
    .terrain-tree-2 {
        background-image: url("images/terrain/treetop_1.png");
    }
    .terrain-tree-3 {
        background-image: url("images/terrain/treetop_1.png");
    }
    .terrain-tree-s0  {  visibility: hidden;  }
    .terrain-tree-s10 {  width: 1px; height: 1px;  }
    .terrain-tree-s20 {  width: 2px; height: 2px;  }
    .terrain-tree-s30 {  width: 3px; height: 3px;  }
    .terrain-tree-s40 {  width: 4px; height: 4px;  }
    .terrain-tree-s50 {  width: 5px; height: 5px;  }
    .terrain-tree-s60 {  width: 6px; height: 6px;  }
    .terrain-tree-s70 {  width: 7px; height: 7px;  }
    .terrain-tree-s80 {  width: 8px; height: 8px;  }
    .terrain-tree-s90 {  width: 9px; height: 9px;  }
    .terrain-tree-s100{  width: 10px; height: 10px;  }

</style>

<div class="map">
    <div data-bind="foreach: tiles">
        <div data-bind="foreach: $data">
            <div class="tile" data-bind="attr: { 'data-name': name }">
                <div class="tile-bg" data-bind="css: terrain.classVariant, text: terrain().symbol">
                </div>
                <div class="tile-L1" data-bind="foreach: trees">
                    <div class="terrain-tree" data-bind="css: 'terrain-tree-' + classVariant + ' terrain-tree-s' + size(), style: { left: x * 10 + 5 - 5 * size() / 100, top: y * 10 + 5 - 5 * size() / 100 }"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<div>
    Speed: <span data-bind="text: speed"></span><br />
    Start/Stop: <input type="button" data-bind="click: flipSpeed, value: (speed() == 0 ? 'start' : 'pause')"/>
</div>

<script src="@Url.Content("~/js/lib/jquery-1.10.2.min.js")"></script>
<script src="@Url.Content("~/js/lib/knockout-2.3.0.js")"></script>
<script src="@Url.Content("~/js/src/townViewModel.js")"></script>
<script type="text/javascript">
    //var viewmodel = new town.TownViewModel(20,20);
    var viewmodel = new town.TownViewModel(20,20);
    ko.applyBindings(viewmodel);

    function center(x, width, percent) {
        return x + width + (width / 2) * (1 - percent);
    }
</script>